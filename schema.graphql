type Counterexample {
  createdAt: DateTime
  errorMessage: String
  hypothesis: Hypothesis
  hypothesisId: Int
  id: Int
  sourceData: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Example {
  createdAt: DateTime
  hypothesis: Hypothesis
  hypothesisId: Int
  id: Int
  session: LearningSession
  sessionId: Int
  sourceData: String
  targetData: String
  type: String
}

input ExampleInput {
  sessionId: Int!
  sourceData: String!
  targetData: String!
  type: String!
}

type Hypothesis {
  confidence: Float
  counterexamples: [Counterexample!]
  createdAt: DateTime
  description: String
  examples: [Example!]
  functionCode: String
  id: Int
  session: LearningSession
  sessionId: Int
  status: String
  updatedAt: DateTime
}

type LearningSession {
  createdAt: DateTime
  description: String
  examples: [Example!]
  hypotheses: [Hypothesis!]
  id: Int
  name: String
  status: String
  updatedAt: DateTime
}

input LearningSessionInput {
  description: String
  name: String!
}

type Mutation {
  addExample(data: ExampleInput!): Example
  createLearningSession(data: LearningSessionInput!): LearningSession
  generateHypothesis(sessionId: Int!): String
  seedSourceData(data: [SourceDataInput!]!): [SourceData!]
  testHypothesis(hypothesisId: Int!): String
}

type Query {
  achievements(sessionId: Int!): String
  allLearningSessions: [LearningSession!]
  allSourceData: [SourceData!]
  examplesBySession(sessionId: Int!): [Example!]
  funFacts: String
  globalStats: String
  hypothesesBySession(sessionId: Int!): [Hypothesis!]
  hypothesisById(id: Int!): Hypothesis
  learningSessionById(id: Int!): LearningSession
  sessionStats(sessionId: Int!): String
}

type SourceData {
  category: String
  id: Int
  name: String
  price: Float
}

input SourceDataInput {
  category: String!
  name: String!
  price: Float!
}